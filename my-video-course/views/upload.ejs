<%- include('partials/header', { title: 'Upload Video' }) %>

<!-- Main Content -->
<main class="flex-grow overflow-y-auto px-4 py-8 md:px-8">
  <div class="max-w-2xl mx-auto bg-white p-8 rounded-lg shadow-md">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">Upload New Video</h1>
    
    <div id="upload-progress" class="hidden mb-4">
      <div class="w-full bg-gray-200 rounded-full h-2.5">
        <div id="progress-bar" class="bg-blue-600 h-2.5 rounded-full" style="width: 0%"></div>
      </div>
      <p id="progress-text" class="text-sm text-gray-600 mt-1">0%</p>
    </div>
    
    <form action="/videos/upload" method="POST" enctype="multipart/form-data" class="space-y-6" id="upload-form"
      data-bucket="<%= s3BucketName %>" 
      data-region="<%= region %>">
      <div>
        <label for="title" class="block text-sm font-medium text-gray-700 mb-1">Video Title</label>
        <input 
          type="text" 
          name="title" 
          id="title"
          placeholder="Enter video title" 
          required
          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
      </div>
      
      <div>
        <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Video Description</label>
        <textarea 
          name="description" 
          id="description"
          placeholder="Enter video description" 
          required
          rows="4"
          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
        ></textarea>
      </div>
      
      <div>
        <label for="courseId" class="block text-sm font-medium text-gray-700 mb-1">Select Course</label>
        <select 
          name="courseId" 
          id="courseId"
          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          <% courses.forEach(course => { %>
            <option value="<%= course %>"><%= course %></option>
          <% }); %>
        </select>
      </div>
      
      <div>
        <label for="video" class="block text-sm font-medium text-gray-700 mb-1">Video File</label>
        <input 
          type="file" 
          name="video" 
          id="video"
          accept="video/*"
          required
          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
      </div>
      
      <button 
        type="submit"
        id="upload-button"
        class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
      >
        Upload Video
      </button>
    </form>
  </div>
</main>

<script src="https://sdk.amazonaws.com/js/aws-sdk-2.1048.0.min.js"></script>
<script src="/js/s3-upload.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('upload-form');
    const progressBar = document.getElementById('progress-bar');
    const progressText = document.getElementById('progress-text');
    const progressContainer = document.getElementById('upload-progress');
    const uploadButton = document.getElementById('upload-button');
    
    if (form) {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const title = document.getElementById('title').value;
        const description = document.getElementById('description').value;
        const courseId = document.getElementById('courseId').value;
        const fileInput = document.getElementById('video');
        const file = fileInput.files[0];
        
        if (!file) {
          alert('Please select a video file');
          return;
        }
        
        // Show progress bar
        progressContainer.classList.remove('hidden');
        uploadButton.disabled = true;
        uploadButton.textContent = 'Uploading...';
        
        // Check if we have AWS credentials
        if (form.dataset.bucket && form.dataset.region) {
          try {
            // Configure AWS SDK
            AWS.config.update({
              region: form.dataset.region
            });
            
            // Show debug info
            console.log('S3 Upload Config:', {
              region: form.dataset.region,
              bucket: form.dataset.bucket
            });
            
            // Check if we have all required credentials
            if (!form.dataset.region || !form.dataset.bucket) {
              throw new Error('Missing S3 configuration. Falling back to direct upload.');
            }
            
            // Use S3 uploader
            const uploader = new S3Uploader({
              region: form.dataset.region,
              bucket: form.dataset.bucket,
              onProgress: (percent) => {
                progressBar.style.width = percent + '%';
                progressText.textContent = percent + '%';
              },
              onComplete: (data) => {
                console.log('S3 upload complete:', data);
                // File uploaded successfully, now submit the form with the S3 URL
                const formData = new FormData();
                formData.append('title', title);
                formData.append('description', description);
                formData.append('courseId', courseId);
                formData.append('videoUrl', data.Location);
                
                fetch('/videos/upload', {
                  method: 'POST',
                  body: formData
                })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    window.location.href = data.redirectUrl || `/course/${courseId}`;
                  } else {
                    throw new Error(data.error || 'Error saving video information');
                  }
                })
                .catch(error => {
                  console.error('Error:', error);
                  alert('Error saving video information. Please try again.');
                  uploadButton.disabled = false;
                  uploadButton.textContent = 'Upload Video';
                });
              },
              onError: (err) => {
                console.error('Error uploading file to S3:', err);
                alert('Error uploading file to S3: ' + err.message);
                uploadButton.disabled = false;
                uploadButton.textContent = 'Upload Video';
              }
            });
            
            // Start upload
            uploader.upload(file);
          } catch (err) {
            console.error('Error initializing S3 upload:', err);
            alert('Error initializing S3 upload: ' + err.message + '\nFalling back to direct upload.');
            
            // Fallback to direct upload
            form.action = '/videos/upload-direct';
            form.submit();
          }
        } else {
          // Fallback to direct upload
          console.log('S3 credentials not available, falling back to direct upload');
          form.action = '/videos/upload-direct';
          form.submit();
        }
      });
    }
  });
</script>

<%- include('partials/footer') %>
