<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= video.title %>
  </title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    .pdf-viewer {
      width: 100%;
      height: 600px;
    }

    .txt-viewer {
      white-space: pre-wrap;
      word-wrap: break-word;
    }

    .video-container {
      position: relative;
      width: 100%;
      max-width: 800px;
      margin: auto;
    }

    .video {
      width: 100%;
    }

    .controls {
      position: absolute;
      bottom: 10px;
      left: 0;
      right: 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: rgba(0, 0, 0, 0.7);
      padding: 5px;
    }

    .control-btn {
      background-color: transparent;
      border: none;
      color: white;
      cursor: pointer;
    }

    .time-display {
      color: white;
    }

    .video-container {
      position: relative;
      width: 100%;
      max-width: 800px;
      margin: auto;
      background: black;
    }

    .video {
      width: 100%;
    }

    .controls {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      background-color: rgba(0, 0, 0, 0.5);
    }

    .control-btn {
      background: none;
      border: none;
      color: white;
      font-size: 16px;
      cursor: pointer;
    }

    .control-btn:hover {
      color: #4CAF50;
    }

    .control-btn i {
      font-size: 20px;
    }

    .time-display {
      color: white;
      font-size: 14px;
    }

    .progress-container {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      background-color: rgb(182, 175, 175);
    }

    .progress-bar {
      width: 0;
      height: 5px;
      background-color: #ff0303;
    }
  </style>
</head>

<body class="bg-gray-100 text-gray-900">
  <div class="container mx-auto p-4">
    <h1 class="text-3xl font-bold mb-4 text-center">
      <%= video.title %>
    </h1>
    <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden">
      <div class="relative ">
        <% if (video && video.videoUrl) { %>
          <% if (video.videoUrl.endsWith('.mp4')) { %>
            <video id="currentVideo" class="w-full h-auto max-w-full video" autoplay controls>
              <source src="/videos/<%= video.videoUrl %>" type="video/mp4">
              <button id="ccButton">CC</button>
              <track kind="subtitles" label="English Captions" src="/videos/<%= video.captionsUrl %>.srt" srclang="en"
                default>
              </track>
              Your browser does not support the video tag.
            </video>


            <!-- <div class="controls" id="customControls">
              <button id="fullscreenBtn" class="control-btn"> <i class="fas fa-expand"></i></button>
              <div id="remainingTime" class="time-display">00:00</div>

              <button id="playPauseBtn" class="control-btn"> <i class="fas fa-pause"></i></button>
              <input id="volumeSlider" type="range" min="0" max="1" step="0.1" value="1">
              <button id="muteBtn" class="control-btn"><i class="fas fa-volume-up"></i></button>
              <input id="seekSlider" type="range" min="0" step="1">
              <span id="currentTime" class="time-display">00:00</span> / <span id="duration"
                class="time-display">00:00</span>
                <div class="progress-container">
                  <div id="progressBar" class="progress-bar"></div>
                </div>
            </div> -->

            <% } else if (video.videoUrl.endsWith('.pdf')) { %>
              <iframe src="/videos/<%= video.videoUrl %>" class="pdf-viewer"></iframe>
              <% } else if (video.videoUrl.endsWith('.txt')) { %>
                <div class="p-4 txt-viewer">
                  <% include('/videos/' + video.videoUrl); %>
                </div>
                <% } else if (video.videoUrl.endsWith('.html')) { %>
                  <iframe src="/videos/<%= video.videoUrl %>" class="w-full h-auto"></iframe>
                  <% } else { %>
                    <p class="p-4 text-red-500">Unsupported file type.</p>
                    <% } %>
                      <% } else { %>
                        <p class="p-4 text-red-500">Video URL is not defined.</p>
                        <% } %>
      </div>
      <div class="p-4">
        <p class="text-gray-600 mb-4">
          <%= video.description %>
        </p>
        <form id="watchForm" action="/videos/<%= video._id %>/watch" method="POST" class="text-center">
          <% if (video.watched) { %>
            <button type="submit"
              class="bg-black text-white px-4 py-2 rounded flex items-center justify-center transition duration-300">
              <img src="https://vendorcenter.jumia.com/assets/images/local_green.svg" alt="Watched"
                class="w-6 h-6 mr-2">
              Watched
            </button>
            <% } else { %>
              <button type="submit"
                class="bg-blue-500 text-white px-4 py-2 rounded flex items-center justify-center hover:bg-blue-600 transition duration-300">
                <img src="https://vendorcenter.jumia.com/assets/images/local_red.svg" alt="Not Watched"
                  class="w-6 h-6 mr-2">
                Mark as Watched
              </button>
              <% } %>
        </form>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const video = document.getElementById('currentVideo');
        const watchForm = document.getElementById('watchForm');
        const playPauseBtn = document.getElementById('playPauseBtn');
        const progressBar = document.getElementById('progressBar');
        video.controls = true;
        video.addEventListener('timeupdate', updateProgress);
        const muteBtn = document.getElementById('muteBtn');
        const seekSlider = document.getElementById('seekSlider');
        const currentTime = document.getElementById('currentTime');
        const duration = document.getElementById('duration');
        const remainingTime = document.getElementById('remainingTime');
        document.addEventListener('keydown', handleKeyDown);
        video.addEventListener('click', toggleFullScreen);
        video.addEventListener('ended', function () {
          const watchForm = document.getElementById('watchForm');
          watchForm.submit();
        });
        function updateProgress() {
          const progress = (video.currentTime / video.duration) * 100;
          progressBar.style.width = `${progress}%`;
        }
        const volumeSlider = document.getElementById('volumeSlider');



        playPauseBtn.addEventListener('click', togglePlayPause);
        volumeSlider.addEventListener('input', adjustVolume);
        fullscreenBtn.addEventListener('click', toggleFullScreen);
        muteBtn.addEventListener('click', toggleMute);
        seekSlider.addEventListener('input', seek);
        video.addEventListener('timeupdate', updateProgress);
        video.addEventListener('timeupdate', updateRemainingTime);
        video.controls = false;
        const customControls = document.getElementById('customControls');
        video.addEventListener('loadedmetadata', () => {
          durationDisplay.textContent = formatTime(video.duration);
          seekSlider.max = video.duration;
        });
        video.addEventListener('fullscreenchange', () => {
          if (document.fullscreenElement) {
            customControls.style.display = 'block';
          } else {
            customControls.style.display = 'block';
          }
        });

        function formatTime(time) {
          const minutes = Math.floor(time / 60);
          const seconds = Math.floor(time % 60);
          return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
        }

        function updateProgress() {
          const progress = (video.currentTime / video.duration) * 100;
          progressBar.style.width = `${progress}%`;
        }
        function updateRemainingTime() {
          const remaining = video.duration - video.currentTime;
          remainingTime.textContent = formatTime(remaining);
        }

        //video.addEventListener('click', togglePlayPause);
        function toggleFullScreen() {
          if (!document.fullscreenElement) {
            video.requestFullscreen();
            fullscreenBtn.innerHTML = '<i class="fas fa-compress"></i>';
          } else {
            document.exitFullscreen();
            fullscreenBtn.innerHTML = '<i class="fas fa-expand"></i>';
          }
        }
        function handleKeyDown(event) {
          if (event.key === ' ') {
            event.preventDefault(); // Prevent default spacebar action (scrolling)
            togglePlayPause();
          } else if (event.key === 'f' || event.key === 'F') {
            toggleFullScreen();
          }
        }
        function togglePlayPause() {
          if (video.paused) {
            video.play();
            playPauseBtn.innerHTML = '<i class="fas fa-pause"></i>';
          } else {
            video.pause();
            playPauseBtn.innerHTML = '<i class="fas fa-play"></i>';
          }
        }
        function adjustVolume() {
          video.volume = volumeSlider.value;
        }

        function toggleMute() {
          video.muted = !video.muted;
          muteBtn.innerHTML = video.muted ? '<i class="fas fa-volume-up"></i>' : '<i class="fas fa-volume-mute"></i>';
        }

        function seek() {
          video.currentTime = seekSlider.value;
        }

        video.addEventListener('timeupdate', updateTime);
        function updateTime() {
          seekSlider.value = video.currentTime;
          currentTime.textContent = formatTime(video.currentTime);
          duration.textContent = formatTime(video.duration);
        }

        function formatTime(time) {
          const minutes = Math.floor(time / 60);
          const seconds = Math.floor(time % 60);
          return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
        }

        if (video) {
          video.addEventListener('ended', function () {
            // Submit the form to mark the video as watched
            watchForm.addEventListener('submit', async function (event) {
              event.preventDefault();

              const form = event.target;
              const response = await fetch(form.action, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              });

              if (response.ok) {
                const data = await response.json();
                const nextVideoId = data.nextVideoId;

                // Redirect to the next video page
                window.location.href = `/videos/${nextVideoId}`;
              }
            });
          });
        }
      });
    </script>

  </div>
</body>

</html>