<%- include('partials/header', { title: 'Video Dashboard' }) %>

<!-- Main Content -->
<main class="flex-grow overflow-y-auto px-4 py-8 md:px-8">
  <div class="flex justify-between items-center mb-8">
    <h1 class="text-4xl font-bold text-gray-800">
      Available Courses
    </h1>
    <button id="syncButton" class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors flex items-center">
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
      </svg>
      Sync with Database
    </button>
  </div>

  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
    <% courses.forEach(course => { %>
      <div class="group bg-white rounded-xl shadow-lg overflow-hidden transform hover:-translate-y-1 transition-all duration-300">
        <div class="relative">
          <img
            src="https://static.wixstatic.com/media/e7182f_ce51e32517d147c8a9eb08766c12f9fa~mv2.png/v1/fill/w_960,h_540,al_c/e7182f_ce51e32517d147c8a9eb08766c12f9fa~mv2.png"
            alt="<%= course.name %>"
            class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
          />
          <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-10 transition-all duration-300"></div>
        </div>
        <div class="p-6">
          <h2 class="text-xl font-semibold text-gray-800 mb-3">
            <%= course.name %>
          </h2>
          <p class="text-gray-600 mb-3">
            Learn the fundamentals and advanced concepts of <%= course.name %>.
          </p>
          
          <% if (course.videos && course.videos.length > 0) { %>
            <% 
              const totalVideos = course.videos.length;
              const watchedVideos = course.videos.filter(v => v.watched).length;
              const watchedPercent = totalVideos > 0 ? Math.round((watchedVideos / totalVideos) * 100) : 0;
            %>
            <div class="mb-4">
              <div class="flex justify-between items-center mb-1">
                <span class="text-xs font-medium text-gray-500">Progress</span>
                <span class="text-xs font-medium text-gray-500"><%= watchedVideos %>/<%= totalVideos %> (<%= watchedPercent %>%)</span>
              </div>
              <div class="h-1.5 bg-gray-200 rounded-full overflow-hidden">
                <div class="h-full bg-green-500" style="width: <%= watchedPercent %>%"></div>
              </div>
            </div>
          <% } %>
          
          <a
            href="/course/<%= course.name %>"
            class="inline-flex items-center px-4 py-2 bg-indigo-500 text-white font-medium rounded-lg hover:bg-indigo-600 transition-colors duration-200"
          >
            <span>Start Learning</span>
            <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </a>
        </div>
      </div>
    <% }) %>
  </div>
</main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const syncButton = document.getElementById('syncButton');
    
    if (syncButton) {
      syncButton.addEventListener('click', async () => {
        syncButton.disabled = true;
        syncButton.innerHTML = '<svg class="w-5 h-5 animate-spin mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Syncing...';
        
        // Add status message
        const statusDiv = document.createElement('div');
        statusDiv.className = 'fixed bottom-4 right-4 bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded';
        statusDiv.id = 'syncStatus';
        statusDiv.textContent = 'Attempting to connect to database...';
        document.body.appendChild(statusDiv);
        
        try {
          // Set a timeout for the request
          const controller = new AbortController();
          const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout
          
          const response = await fetch('/api/sync', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            signal: controller.signal
          });
          
          clearTimeout(timeoutId);
          
          const result = await response.json();
          
          if (result.success) {
            statusDiv.className = 'fixed bottom-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded';
            statusDiv.textContent = 'Sync completed successfully!';
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            statusDiv.className = 'fixed bottom-4 right-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded';
            statusDiv.textContent = 'Sync failed: ' + (result.error || 'Unknown error');
          }
        } catch (err) {
          statusDiv.className = 'fixed bottom-4 right-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded';
          if (err.name === 'AbortError') {
            statusDiv.textContent = 'Sync timed out. Please try again later.';
          } else {
            statusDiv.textContent = 'Error syncing with database: ' + err.message;
          }
        } finally {
          syncButton.disabled = false;
          syncButton.innerHTML = '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg> Sync with Database';
          
          // Remove status message after 5 seconds
          setTimeout(() => {
            if (document.body.contains(statusDiv)) {
              document.body.removeChild(statusDiv);
            }
          }, 5000);
        }
      });
    }
  });
</script>

<%- include('partials/footer') %>