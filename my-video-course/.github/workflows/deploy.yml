name: Deploy to AWS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: video-course-app

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build for linux/amd64 platform
        docker buildx create --use --name multiarch || true
        docker buildx build --platform linux/amd64 \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --push .
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -var-file="terraform.tfvars"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      working-directory: ./terraform
      run: terraform apply -auto-approve -var-file="terraform.tfvars"

    - name: Trigger Instance Refresh
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        ASG_NAME=$(cd terraform && terraform output -raw autoscaling_group_name)
        aws autoscaling start-instance-refresh --auto-scaling-group-name $ASG_NAME