<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course Manager</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, sans-serif;
            background: #f5f5f7;
            color: #1d1d1f;
            transition: all 0.3s ease;
        }
        body.dark { background: #000; color: #f5f5f7; }
        .container { max-width: 1200px; margin: 0 auto; padding: 40px 20px; }
        .header { text-align: center; margin-bottom: 60px; }
        .header h1 { font-size: 48px; font-weight: 600; margin-bottom: 16px; }
        .header p { font-size: 21px; color: #86868b; }
        .courses-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 24px; }
        .course-card { 
            background: white; 
            border-radius: 18px; 
            padding: 32px; 
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
        }
        body.dark .course-card { background: #1c1c1e; box-shadow: 0 4px 20px rgba(255,255,255,0.05); }
        .course-card:hover { 
            transform: translateY(-4px); 
            box-shadow: 0 8px 40px rgba(0,0,0,0.12);
        }
        .course-title { font-size: 24px; font-weight: 600; margin-bottom: 12px; }
        .course-description { color: #86868b; font-size: 17px; line-height: 1.5; margin-bottom: 24px; }
        .course-stats { display: flex; gap: 24px; margin-bottom: 32px; }
        .stat { text-align: center; }
        .stat-number { font-size: 28px; font-weight: 600; color: #007aff; }
        .stat-label { font-size: 13px; color: #86868b; text-transform: uppercase; letter-spacing: 0.5px; }
        .btn { 
            background: #007aff; 
            color: white; 
            border: none; 
            padding: 12px 24px; 
            border-radius: 12px; 
            font-size: 17px; 
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
            width: 100%;
        }
        .btn:hover { background: #0056b3; transform: scale(1.02); }
        .empty-state { 
            text-align: center; 
            padding: 80px 20px; 
            color: #86868b; 
        }
        .empty-state h2 { font-size: 32px; margin-bottom: 16px; }
        .nav { 
            display: flex; 
            justify-content: space-between; 
            align-items: center; 
            margin-bottom: 40px; 
            padding: 20px 0;
        }
        .nav-links { display: flex; gap: 32px; }
        .nav-link { 
            color: #1d1d1f; 
            text-decoration: none; 
            font-weight: 500;
            transition: color 0.2s;
        }
        .nav-link:hover { color: #007aff; }
        .nav-link.active { color: #007aff; }
        .logo { font-size: 24px; font-weight: 600; }
        .theme-toggle {
            background: none;
            border: 2px solid currentColor;
            color: inherit;
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s;
            margin-left: 16px;
        }
        .theme-toggle:hover { background: currentColor; color: #f5f5f7; }
        body.dark .theme-toggle:hover { color: #000; }
    </style>
</head>
<body>
    <div class="container">
        <nav class="nav">
            <div class="logo">üìö Admin Panel</div>
            <div class="nav-links">
                <a href="/admin/dashboard" class="nav-link">Dashboard</a>
                <a href="/admin/course-manager" class="nav-link active">Courses</a>
                <a href="/admin/teacher-requests" class="nav-link">Teachers</a>
                <a href="/logout" class="nav-link">Logout</a>
                <button class="theme-toggle" onclick="toggleTheme()">üåô</button>
            </div>
        </nav>

        <div class="header">
            <h1>Course Manager</h1>
            <p>Manage and edit your course content</p>
        </div>

        <div id="courseList" class="courses-grid">
            <!-- Courses will be loaded here -->
        </div>
    </div>

    <script>
        const serverCourses = <%- JSON.stringify(courses || []) %>;
        
        document.addEventListener('DOMContentLoaded', () => {
            renderCourses(serverCourses);
        });
        
        function renderCourses(courses) {
            const container = document.getElementById('courseList');
            
            if (courses.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <h2>No courses found</h2>
                        <p>Start by creating your first course</p>
                    </div>
                `;
                return;
            }
            
            container.innerHTML = courses.map(course => {
                const videoCount = course.videos ? course.videos.length : 0;
                const watchedCount = course.videos ? course.videos.filter(v => v.watched).length : 0;
                const completionRate = videoCount > 0 ? Math.round((watchedCount / videoCount) * 100) : 0;
                
                return `
                    <div class="course-card">
                        <div class="course-title">${course.title || course.name || 'Untitled Course'}</div>
                        <div class="course-description">${course.description || 'No description available'}</div>
                        
                        <div class="course-stats">
                            <div class="stat">
                                <div class="stat-number">${videoCount}</div>
                                <div class="stat-label">Videos</div>
                            </div>
                            <div class="stat">
                                <div class="stat-number">${completionRate}%</div>
                                <div class="stat-label">Completed</div>
                            </div>
                            <div class="stat">
                                <div class="stat-number">${course.category || 'General'}</div>
                                <div class="stat-label">Category</div>
                            </div>
                        </div>
                        
                        <button class="btn" onclick="editCourse('${course.name || course._id}')">
                            Edit Course
                        </button>
                    </div>
                `;
            }).join('');
        }
        
        function editCourse(courseId) {
            window.location.href = `/course/${encodeURIComponent(courseId)}`;
        }
        
        function toggleTheme() {
            const body = document.body;
            const button = document.querySelector('.theme-toggle');
            
            body.classList.toggle('dark');
            const isDark = body.classList.contains('dark');
            
            button.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
        }

        // Initialize theme
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
            document.body.classList.add('dark');
            document.querySelector('.theme-toggle').textContent = '‚òÄÔ∏è';
        }
    </script>
</body>
</html>