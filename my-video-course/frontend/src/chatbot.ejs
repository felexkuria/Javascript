<%- include('partials/header', { title: 'Course Chatbot', extraStyles: `
<style>
  body {
    background-color: #1a202c; /* Dark background */
    color: #e2e8f0; /* Light text */
  }
  .chat-container {
    height: calc(100vh - 200px);
    background-color: #2d3748; /* Darker background for chat */
  }
  .message {
    animation: fadeIn 0.3s ease-in;
  }
  .message .bg-white {
    background-color: #4a5568; /* Darker message background */
  }
  .message .text-gray-800 {
    color: #e2e8f0; /* Light text for messages */
  }
  .typing-indicator {
    animation: pulse 1.5s infinite;
  }
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
</style>
` }) %>

<main class="flex-grow px-4 py-8 md:px-8">
  <div class="max-w-4xl mx-auto">
    <div class="bg-gray-800 rounded-xl shadow-lg overflow-hidden">
      <div class="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6">
        <h1 class="text-2xl font-bold mb-2">ðŸ¤– Course Assistant</h1>
        <p class="text-blue-100">
          Ask me anything about your video courses! I'll explain concepts like
          David J. Malan from CS50.
        </p>
      </div>

      <div
        id="chatContainer"
        class="chat-container overflow-y-auto p-6"
      >
        <div class="message mb-4">
          <div class="flex items-start">
            <div
              class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center mr-3 flex-shrink-0"
            >
              ðŸ¤–
            </div>
            <div class="bg-gray-700 rounded-lg p-4 shadow-sm max-w-3xl">
              <p class="text-gray-300">
                Hello! I'm your course assistant. I have knowledge from all your
                video courses and can explain concepts in an engaging, David J.
                Malan style. Try asking me:
              </p>
              <ul class="mt-2 text-sm text-gray-400">
                <li>â€¢ "Explain Git like David J. Malan"</li>
                <li>â€¢ "What is Kubernetes in simple terms?"</li>
                <li>â€¢ "How does DevOps work?"</li>
                <li>â€¢ "Explain AWS architecture"</li>
              </ul>
              <p class="text-gray-300 mt-4">
                Additionally, I can help you manage your tasks. Here's a sample of what you can do:
              </p>
              <ul class="mt-2 text-sm text-gray-400">
                <li>â€¢ "Add 'Complete project report' to my todos"</li>
                <li>â€¢ "Show me my todos"</li>
                <li>â€¢ "Mark 'Complete project report' as done"</li>
                <li>â€¢ "Clear all completed todos"</li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      <div class="border-t bg-gray-800 p-4">
        <div class="flex gap-3 mb-2">
          <input
            type="text"
            id="messageInput"
            placeholder="Ask me about any concept from your courses..."
            class="flex-1 border border-gray-600 rounded-lg px-4 py-2 bg-gray-700 text-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <button
            id="sendButton"
            class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition-colors"
          >
            Send
          </button>
        </div>
        <div class="flex justify-end">
          <button
            id="clearHistoryButton"
            class="text-xs text-gray-400 hover:text-red-500 transition-colors"
          >
            Clear Chat History
          </button>
        </div>
      </div>
    </div>
  </div>
</main>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const chatContainer = document.getElementById("chatContainer");
    const messageInput = document.getElementById("messageInput");
    const sendButton = document.getElementById("sendButton");

    // Load chat history from localStorage
    let chatHistory = JSON.parse(
      localStorage.getItem("chatbot_history") || "[]"
    );

    function addMessage(content, isUser = false, saveToHistory = true) {
      const messageDiv = document.createElement("div");
      // Format words enclosed in **<words>** as bold

      content = content.replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>");

      // Format words enclosed in *<word>* as italic
      content = content.replace(/\*(.*?)\*/g, "<em>$1</em>");
      messageDiv.className = "message mb-4";

      messageDiv.innerHTML = `
      <div class="flex items-start ${isUser ? "justify-end" : ""}">
        ${
          !isUser
            ? '<div class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center mr-3 flex-shrink-0">ðŸ¤–</div>'
            : ""
        }
        <div class="${
          isUser ? "bg-blue-500 text-white ml-12" : "bg-white text-gray-800"
        } rounded-lg p-4 shadow-sm max-w-3xl">
          ${content}
        </div>
        ${
          isUser
            ? '<div class="bg-gray-400 text-white rounded-full w-8 h-8 flex items-center justify-center ml-3 flex-shrink-0">ðŸ‘¤</div>'
            : ""
        }
      </div>
    `;

      chatContainer.appendChild(messageDiv);
      chatContainer.scrollTop = chatContainer.scrollHeight;

      // Save to history
      if (saveToHistory) {
        chatHistory.push({ content, isUser, timestamp: Date.now() });
        localStorage.setItem("chatbot_history", JSON.stringify(chatHistory));
      }
    }

    // Load existing chat history
    function loadChatHistory() {
      // Clear welcome message if history exists
      if (chatHistory.length > 0) {
        chatContainer.innerHTML = "";
        chatHistory.forEach((msg) => {
          addMessage(msg.content, msg.isUser, false);
        });
      }
    }

    function showTyping() {
      const typingDiv = document.createElement("div");
      typingDiv.id = "typing";
      typingDiv.className = "message mb-4";
      typingDiv.innerHTML = `
      <div class="flex items-start">
        <div class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center mr-3 flex-shrink-0">ðŸ¤–</div>
        <div class="bg-white rounded-lg p-4 shadow-sm">
          <div class="typing-indicator text-gray-500">Thinking like David J. Malan...</div>
        </div>
      </div>
    `;
      chatContainer.appendChild(typingDiv);
      chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    function hideTyping() {
      const typing = document.getElementById("typing");
      if (typing) typing.remove();
    }

    async function sendMessage() {
      const message = messageInput.value.trim();
      if (!message) return;

      addMessage(message, true);
      messageInput.value = "";
      sendButton.disabled = true;

      showTyping();

      try {
        const response = await fetch("/api/chatbot", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ message }),
        });

        const data = await response.json();
        hideTyping();

        if (data.response) {
          addMessage(data.response.replace(/\n/g, "<br>"));
        } else {
          addMessage("Sorry, I encountered an error. Please try again.");
        }
      } catch (error) {
        hideTyping();
        addMessage("Sorry, I'm having trouble connecting. Please try again.");
      }

      sendButton.disabled = false;
    }

    // Load chat history on page load
    loadChatHistory();

    sendButton.addEventListener("click", sendMessage);
    messageInput.addEventListener("keypress", (e) => {
      if (e.key === "Enter") sendMessage();
    });
  });
</script>

<%- include('partials/footer') %>
